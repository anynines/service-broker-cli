resource_types:
- name: rsync-resource
  type: docker-image
  source:
      repository: phartz/rsync-resource
      tag: latest

resources:
- name: file-repo
  type: git
  source:
    branch: master
    paths: []
    uri: git@github.com:phartz/service-broker-cli.git
    username: {{git-username}}
    password: {{git-password}}
- name: sync-resource
  type: rsync-resource
  source:
    server: {{target_server}}
    base_dir: {{target_dir}}
    user : {{username}}
    private_key: {{private_key}}
    disable_version_path: true

jobs:

- name: test
  public: true
  plan:
  - get: file-repo
    trigger: true
  - task: make
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: phartz/hugo
      inputs:
        - name: file-repo
      run:
        path: sh
        args:
          - -exc
          - |
            mkdir -p /go/src/github.com/phartz
            cp -R file-repo/ /go/src/github.com/phartz/service-broker-cli
            cd /go/src/github.com/phartz/service-broker-cli
            go get golang.org/x/crypto/ssh/terminal
            go test
            cd tests
            go test

- name: build
  public: true
  plan:
  - get: file-repo
    trigger: true
    passed: [test]
  - task: make
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: phartz/hugo
      inputs:
        - name: file-repo
      outputs:
        - name: public_output
      run:
        path: sh
        args:
          - -exc
          - |
            OUT_PATH=`pwd`
            mkdir -p /go/src/github.com/phartz
            cp -R file-repo/ /go/src/github.com/phartz/service-broker-cli
            cd /go/src/github.com/phartz/service-broker-cli
            go get golang.org/x/crypto/ssh/terminal
            make pipeline_build
            cp -R binaries/* ${OUT_PATH}/public_output
  - put: sync-resource
    params: {
        "sync_dir" : "public_output",
        "rsync_opts": ["-Pav"]
    }

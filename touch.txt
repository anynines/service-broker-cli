NAME:
   create-service - Create a service instance

USAGE:
   cf create-service SERVICE PLAN SERVICE_INSTANCE [-c PARAMETERS_AS_JSON] [-t TAGS]

   Optionally provide service-specific configuration parameters in a valid JSON object in-line:

   cf create-service SERVICE PLAN SERVICE_INSTANCE -c '{"name":"value","name":"value"}'

   Optionally provide a file containing service-specific configuration parameters in a valid JSON object.
   The path to the parameters file can be an absolute or relative path to a file:

   cf create-service SERVICE PLAN SERVICE_INSTANCE -c PATH_TO_FILE

   Example of valid JSON object:
   {
      "cluster_nodes": {
         "count": 5,
         "memory_mb": 1024
      }
   }

TIP:
   Use 'cf create-user-provided-service' to make user-provided services available to CF apps

EXAMPLES:
   Linux/Mac:
      cf create-service db-service silver mydb -c '{"ram_gb":4}'
   
   Windows Command Line:
      cf create-service db-service silver mydb -c "{\"ram_gb\":4}"
   
   Windows PowerShell:
      cf create-service db-service silver mydb -c '{\"ram_gb\":4}'
   
   cf create-service db-service silver mydb -c ~/workspace/tmp/instance_config.json
   
   cf create-service db-service silver mydb -t "list, of, tags"

ALIAS:
   cs

OPTIONS:
   -c      Valid JSON object containing service-specific configuration parameters, provided either in-line or in a file. For a list of supported configuration parameters, see documentation for the particular service offering.
   -t      User provided tags

-------------------------------------------------------------------------------------------------

NAME:
   update-service - Update a service instance

USAGE:
   cf update-service SERVICE_INSTANCE [-p NEW_PLAN] [-c PARAMETERS_AS_JSON] [-t TAGS]

   Optionally provide service-specific configuration parameters in a valid JSON object in-line.
   cf update-service -c '{"name":"value","name":"value"}'

   Optionally provide a file containing service-specific configuration parameters in a valid JSON object. 
   The path to the parameters file can be an absolute or relative path to a file.
   cf update-service -c PATH_TO_FILE

   Example of valid JSON object:
   {
      "cluster_nodes": {
         "count": 5,
         "memory_mb": 1024
      }
   }

   Optionally provide a list of comma-delimited tags that will be written to the VCAP_SERVICES environment variable for any bound applications.

EXAMPLES:
   cf update-service mydb -p gold
   cf update-service mydb -c '{"ram_gb":4}'
   cf update-service mydb -c ~/workspace/tmp/instance_config.json
   cf update-service mydb -t "list,of, tags"

OPTIONS:
   -c      Valid JSON object containing service-specific configuration parameters, provided either in-line or in a file. For a list of supported configuration parameters, see documentation for the particular service offering.
   -p      Change service plan for a service instance
   -t      User provided tags

-------------------------------------------------------------------------------------------------

NAME:
   delete-service - Delete a service instance

USAGE:
   cf delete-service SERVICE_INSTANCE [-f]

ALIAS:
   ds

OPTIONS:
   -f      Force deletion without confirmation

-------------------------------------------------------------------------------------------------

NAME:
   create-service-key - Create key for a service instance

USAGE:
   cf create-service-key SERVICE_INSTANCE SERVICE_KEY [-c PARAMETERS_AS_JSON]

   Optionally provide service-specific configuration parameters in a valid JSON object in-line.
   cf create-service-key SERVICE_INSTANCE SERVICE_KEY -c '{"name":"value","name":"value"}'

   Optionally provide a file containing service-specific configuration parameters in a valid JSON object. The path to the parameters file can be an absolute or relative path to a file.
   cf create-service-key SERVICE_INSTANCE SERVICE_KEY -c PATH_TO_FILE

   Example of valid JSON object:
   {
     "permissions": "read-only"
   }

EXAMPLES:
   cf create-service-key mydb mykey -c '{"permissions":"read-only"}'
   cf create-service-key mydb mykey -c ~/workspace/tmp/instance_config.json

ALIAS:
   csk

OPTIONS:
   -c      Valid JSON object containing service-specific configuration parameters, provided either in-line or in a file. For a list of supported configuration parameters, see documentation for the particular service offering.

-------------------------------------------------------------------------------------------------

NAME:
   service-keys - List keys for a service instance

USAGE:
   cf service-keys SERVICE_INSTANCE

EXAMPLES:
   cf service-keys mydb

ALIAS:
   sk


-------------------------------------------------------------------------------------------------

NAME:
   delete-service-key - Delete a service key

USAGE:
   cf delete-service-key SERVICE_INSTANCE SERVICE_KEY [-f]

EXAMPLES:
   cf delete-service-key mydb mykey

ALIAS:
   dsk

OPTIONS:
   -f      Force deletion without confirmation


-c
-t
-p
-f